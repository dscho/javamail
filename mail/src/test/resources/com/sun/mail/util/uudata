#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# Data to test uudecoder.
#
# Mostly tests error cases and ability to ignore errors.
#

TEST a simple decode test
DATA
begin 644 encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
this is a very very very very very long line to test the decoder
END

TEST no begin
DATA
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST no end
DATA
begin 644 encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST no end, no empty line
DATA
begin 644 encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST no begin, ignore errors
DATA ignoreMissingBeginEnd
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
this is a very very very very very long line to test the decoder
END

TEST no end, ignore errors
DATA ignoreMissingBeginEnd
begin 644 encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
EXPECT
this is a very very very very very long line to test the decoder
END

TEST no begin, no end, ignore errors
DATA ignoreMissingBeginEnd
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
EXPECT
this is a very very very very very long line to test the decoder
END

TEST empty line, ignore errors
DATA ignoreMissingBeginEnd

begin 644 encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
EXPECT
this is a very very very very very long line to test the decoder
END

TEST empty line, no begin, ignore errors
DATA ignoreMissingBeginEnd

M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
EXPECT
this is a very very very very very long line to test the decoder
END

TEST bad mode
DATA
begin xxx encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST bad mode, ignore errors
DATA ignoreErrors
begin xxx encoder.buf
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
this is a very very very very very long line to test the decoder
END

TEST bad filename
DATA
begin 644
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST bad filename, ignore errors
DATA ignoreErrors
begin 644
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
this is a very very very very very long line to test the decoder
END

TEST garbage data
DATA
begin 644 encoder.buf
XXX
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST garbage data (tab)
DATA
begin 644 encoder.buf
	
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
EXCEPTION com.sun.mail.util.DecodingException
END

TEST garbage data, ignore errors
DATA ignoreErrors
begin 644 encoder.buf
XXX
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
 
end
EXPECT
this is a very very very very very long line to test the decoder
END

TEST ignore both kinds of errors
DATA ignoreErrors ignoreMissingBeginEnd
XXX
M=&AI<R!I<R!A('9E<GD@=F5R>2!V97)Y('9E<GD@=F5R>2!L;VYG(&QI;F4@
4=&\@=&5S="!T:&4@9&5C;V1E<@H!
EXPECT
this is a very very very very very long line to test the decoder
END
